apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2apim-publisher-deployment
  namespace: wso2apim
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      deployment: wso2apim-publisher
  template:
    metadata:      
      labels:
        deployment: wso2apim-publisher
    spec:
      initContainers:        
        - name: init-apim-analytics
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of WSO2 API Manager Analytics Worker deployment"; while ! nc -z {{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-service 7712; do sleep 1; printf "-"; done; echo -e "  >> WSO2 API Manager Analytics Worker has started";']
        - name: init-km
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of Key Manager deployment"; while ! nc -z {{ template "am-pattern-3.resource.prefix" . }}-km-service 9443; do sleep 1; printf "-"; done; echo -e "  >> Key Manager has started";']
      containers:
        - name: wso2am-publisher          
          image: docker.wso2.com/wso2am:3.1.0
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: 60
            periodSeconds: {{ .Values.wso2.deployment.am.livenessProbe.periodSeconds }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.wso2.deployment.am.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.am.readinessProbe.periodSeconds }}
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.am.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.am.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.am.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.am.resources.limits.cpu }}
          ports:
            - containerPort: 9763
              protocol: "TCP"
            - containerPort: 9443
              protocol: "TCP"
          env:
            - name: PROFILE_NAME
              value: api-publisher
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: "-Xms{{ .Values.wso2.deployment.am.resources.jvm.heap.memory.xms }} -Xmx{{ .Values.wso2.deployment.am.resources.jvm.heap.memory.xmx }}"
          securityContext:
            runAsUser: 802
          volumeMounts:
          - name: wso2am-publisher-conf
            mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
          {{ if .Values.wso2.deployment.persistentRuntimeArtifacts.apacheSolrIndexing.enabled }}
          - name: wso2am-publisher-local-carbon-database-storage
            mountPath: /home/wso2carbon/solr/database
          - name: wso2am-publisher-indexed-data-volume
            mountPath: /home/wso2carbon/solr/indexed-data
          - name: wso2am-publisher-conf-entrypoint
            mountPath: /home/wso2carbon/docker-entrypoint.sh
            subPath: docker-entrypoint.sh
          {{ end }}
          {{ if .Values.wso2.deployment.dependencies.mysql }}
          - name: mysql-connector-jar
            mountPath: /home/wso2carbon/wso2-artifact-volume/repository/components/dropins
          {{ end }}
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      {{- if .Values.wso2.deployment.am.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.am.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: {{ template "am-pattern-3.resource.prefix" . }}-wso2-private-registry-creds
      {{- end }}
      volumes:
        - name: wso2am-publisher-conf
          configMap:
            name: {{ template "am-pattern-3.resource.prefix" . }}-am-publisher-conf
        {{ if .Values.wso2.deployment.persistentRuntimeArtifacts.apacheSolrIndexing.enabled }}
        - name: wso2am-publisher-conf-entrypoint
          configMap:
            name: {{ template "am-pattern-3.resource.prefix" . }}-am-publisher-conf-entrypoint
            defaultMode: 0407
        - name: wso2am-publisher-local-carbon-database-storage
          persistentVolumeClaim:
            claimName: {{ template "am-pattern-3.resource.prefix" . }}-am-publisher-1-local-carbon-database-volume-claim
        - name: wso2am-publisher-indexed-data-volume
          persistentVolumeClaim:
            claimName: {{ template "am-pattern-3.resource.prefix" . }}-am-publisher-1-solr-indexed-data-volume-claim
        {{ end }}
        {{ if .Values.wso2.deployment.dependencies.mysql }}
        - name: mysql-connector-jar
          emptyDir: {}
        {{ end }}
